spring:
  profiles:
    # 默认使用开发环境
    active: prod
  main:
    allow-bean-definition-overriding: true
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: localhost
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: it123456
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0

  datasource:
    # 如果存在多个数据源，监控的时候可以通过名字来区分开来
    name: mysql
    # 连接数据库的url
    url: jdbc:mysql://localhost:3306/test?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    # 连接数据库的账号
    username: root
    #  连接数据库的密码
    password: it123456
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    # 扩展插件
    # 监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
    filters: stat
    # 最大连接池数量
    maxActive: 20
    # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
    initialSize: 1
    # 获取连接时最大等待时间，单位毫秒
    maxWait: 60000
    # 最小连接池数量
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    # 连接保持空闲而不被驱逐的最长时间
    minEvictableIdleTimeMillis: 300000
    # 用来检测连接是否有效的sql，要求是一个查询语句
    # 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用
    validationQuery: select count(1) from 'js_exception'
    # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
    testWhileIdle: true
    # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnBorrow: false
    # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false
    # 是否缓存preparedStatement，即PSCache
    poolPreparedStatements: false
    # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true
    maxOpenPreparedStatements: -1
  security:
    user:
      name: admin
      password: adminadmin123
      roles: admin



# pagehelper分页插件
# pagehelper:
#  # 数据库的方言
#  helperDialect: mysql
#  # 启用合理化，如果pageNum < 1会查询第一页，如果pageNum > pages会查询最后一页
#  reasonable: true

# mybatis:
#    # mapper.xml包地址
#  mapper-locations: classpath:mapper/*.xml
#  # pojo生成包地址
#  type-aliases-package: com.xg.study.mybatis.po
#  configuration:
#    map-underscore-to-camel-case: true
#    # 关闭二级缓存
#    cache-enabled: false
#    # 一级缓存（本地缓存）范围 session:就会有数据的共享 statement:语句范围 (这样就不会有数据的共享 ) 注意：一级缓存无法关闭
#    local-cache-scope: statement
#mybatis
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.xg.cctv.mybatis.po
  global-config:
    # 数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: not_empty
      #驼峰下划线转换
      column-underline: true
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置
      logic-delete-value: 0
      logic-not-delete-value: 1
      db-type: h2
    #刷新mapper 调试神器
    refresh: true
  # 原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
#logger

#应用配置
resources:
  # log文件写入地址
  logdir: logs/
  # 应用名称
  appname: cctv
  # 日志打印的基础扫描包
  basepackage: com.xg.cctv

#shiro
shiro:
  redis:
    auther:
      # 设置过期时间，单位是秒，30分钟
      expire: 1800

server:
  servlet:
    context-path: /cctv