package ${package.ServiceImpl};

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import org.springframework.stereotype.Service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import org.apache.commons.lang3.StringUtils;

import java.util.List;
import java.util.Map;
/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
@Transactional
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {

    @Autowired
    private ${table.mapperName} ${table.entityPath}Mapper;

    @Override
    public IPage<${entity}> selectPage(Page<${entity}> page, ${entity} ${table.entityPath}) {
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper<${entity}>();
        getQueryWrapper(queryWrapper,${table.entityPath});
        return ${table.entityPath}Mapper.selectPage(page,queryWrapper);
    }

    @Override
    public IPage<${entity}> selectPage(Page<${entity}> page, Map<String, Object> params) {
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper<${entity}>();
        getQueryWrapper(queryWrapper , params);
        return ${table.entityPath}Mapper.selectPage(page , queryWrapper);
    }

    @Override
    public List<${entity}> selectList(${entity} ${table.entityPath}) {
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper<${entity}>();
        getQueryWrapper(queryWrapper , ${table.entityPath});
        return ${table.entityPath}Mapper.selectList(queryWrapper);
    }

    @Override
    public List<${entity}> selectList(Map<String , Object> params) {
        QueryWrapper<${entity}> queryWrapper = new QueryWrapper<${entity}>();
        getQueryWrapper(queryWrapper , params);
        return ${table.entityPath}Mapper.selectList(queryWrapper);
    }

    /**
     *  公共查询条件
     * @param queryWrapper
     * @return
     */
    public QueryWrapper<${entity}> getQueryWrapper(QueryWrapper<${entity}> queryWrapper,${entity} ${table.entityPath}){
        //条件拼接
    #*#foreach($field in ${table.fields})
        #if(!${field.keyFlag})
        if (StringUtils.isNotBlank(${table.entityPath}.get${field.capitalName}())){
                queryWrapper.like(${entity}.${field.name.toUpperCase()},${table.entityPath}.get${field.capitalName}());
        }
        #end
    #end*#
        return queryWrapper;
    }

    public QueryWrapper<${entity}> getQueryWrapper(QueryWrapper<${entity}> queryWrapper,Map<String , Object> params){
    //条件拼接
    return queryWrapper;
    }
}
